// Since: cosmos-sdk 0.46

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file cosmos/gov/v1/query.proto (package cosmos.gov.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryConstitutionRequest, QueryConstitutionResponse, QueryDepositRequest, QueryDepositResponse, QueryDepositsRequest, QueryDepositsResponse, QueryParamsRequest, QueryParamsResponse, QueryProposalRequest, QueryProposalResponse, QueryProposalsRequest, QueryProposalsResponse, QueryTallyResultRequest, QueryTallyResultResponse, QueryVoteRequest, QueryVoteResponse, QueryVotesRequest, QueryVotesResponse } from "./query_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Query defines the gRPC querier service for gov module
 *
 * @generated from service cosmos.gov.v1.Query
 */
export const Query = {
  typeName: "cosmos.gov.v1.Query",
  methods: {
    /**
     * Constitution queries the chain's constitution.
     *
     * @generated from rpc cosmos.gov.v1.Query.Constitution
     */
    constitution: {
      name: "Constitution",
      I: QueryConstitutionRequest,
      O: QueryConstitutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Proposal queries proposal details based on ProposalID.
     *
     * @generated from rpc cosmos.gov.v1.Query.Proposal
     */
    proposal: {
      name: "Proposal",
      I: QueryProposalRequest,
      O: QueryProposalResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Proposals queries all proposals based on given status.
     *
     * @generated from rpc cosmos.gov.v1.Query.Proposals
     */
    proposals: {
      name: "Proposals",
      I: QueryProposalsRequest,
      O: QueryProposalsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Vote queries voted information based on proposalID, voterAddr.
     *
     * @generated from rpc cosmos.gov.v1.Query.Vote
     */
    vote: {
      name: "Vote",
      I: QueryVoteRequest,
      O: QueryVoteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Votes queries votes of a given proposal.
     *
     * @generated from rpc cosmos.gov.v1.Query.Votes
     */
    votes: {
      name: "Votes",
      I: QueryVotesRequest,
      O: QueryVotesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Params queries all parameters of the gov module.
     *
     * @generated from rpc cosmos.gov.v1.Query.Params
     */
    params: {
      name: "Params",
      I: QueryParamsRequest,
      O: QueryParamsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deposit queries single deposit information based proposalID, depositAddr.
     *
     * @generated from rpc cosmos.gov.v1.Query.Deposit
     */
    deposit: {
      name: "Deposit",
      I: QueryDepositRequest,
      O: QueryDepositResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deposits queries all deposits of a single proposal.
     *
     * @generated from rpc cosmos.gov.v1.Query.Deposits
     */
    deposits: {
      name: "Deposits",
      I: QueryDepositsRequest,
      O: QueryDepositsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * TallyResult queries the tally of a proposal vote.
     *
     * @generated from rpc cosmos.gov.v1.Query.TallyResult
     */
    tallyResult: {
      name: "TallyResult",
      I: QueryTallyResultRequest,
      O: QueryTallyResultResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

